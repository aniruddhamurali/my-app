#FROM node:8
# Create app directory
#WORKDIR /usr/src/app
# Install app dependencies
#COPY package*.json ./

#RUN npm install --silent
# Copy app source code
#COPY . .

#Expose port and start application
#EXPOSE 3000
#CMD ["npm", "start"]


# Build step #1: build the React front end
FROM node:16-alpine as build-step
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json yarn.lock ./
COPY ./src ./src
COPY ./public ./public


ARG ssh_prv_key
ARG ssh_pub_key

RUN apk add openssh

RUN apk update && \
    apk add git

# Authorize SSH Host
RUN mkdir -p /root/.ssh && \
    chmod 0700 /root/.ssh && \
    ssh-keyscan github.com > /root/.ssh/known_hosts

# Add the keys and set permissions
#RUN echo "$ssh_prv_key" > /root/.ssh/id_ed25519  && \
#    echo "$ssh_pub_key" > /root/.ssh/id_ed25519.pub && \
#    chmod 600 /root/.ssh/id_ed25519  && \
#    chmod 600 /root/.ssh/id_ed25519.pub

COPY id_ed25519 /root/.ssh/id_ed25519
RUN chmod 600 /root/.ssh/id_ed25519

RUN eval "$(ssh-agent -s)" && ssh-add /root/.ssh/id_ed25519 


RUN yarn install
RUN yarn build



# Build step #2: build an nginx container
FROM nginx:stable-alpine
COPY --from=build-step /app/build /usr/share/nginx/html
#COPY deployment/nginx.default.conf /etc/nginx/conf.d/default.conf